---
version: "3.8"
name: immich
services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
#     extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/hardware-transcoding
#       file: hwaccel.transcoding.yml
#       service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
#   command: ['start.sh', 'immich']
    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    networks:
      - traefik-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.${ENV_NAME}.entrypoints=websecure
      - traefik.http.routers.${ENV_NAME}.rule=Host(`${IMMICH_URL}`)
      - traefik.http.routers.${ENV_NAME}.tls.certresolver=cloudflare-staging
      - traefik.http.routers.${ENV_NAME}.tls=true
      - traefik.http.services.${ENV_NAME}.loadbalancer.server.port=3001
    depends_on:
      - redis
      - database
    restart: always
  # immich-microservices:
  #   container_name: immich_microservices
  #   image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
  #   command:
  #     - start.sh
  #     - microservices
  #   volumes:
  #     - ${UPLOAD_LOCATION}:/usr/src/app/upload
  #     - /etc/localtime:/etc/localtime:ro
  #   env_file:
  #     - .env
  #   networks:
  #     - traefik-network
  #   depends_on:
  #     - redis
  #     - database
  #   restart: always
  immich-machine-learning:
    container_name: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    volumes:
      - ./model-cache:/cache
    env_file:
      - .env
    networks:
      - traefik-network
    restart: always
  redis:
    container_name: immich_redis
    image: registry.hub.docker.com/library/redis:6.2-alpine@sha256:51d6c56749a4243096327e3fb964a48ed92254357108449cb6e23999c37773c5
    networks:
      - traefik-network
    restart: always
  database:
    container_name: immich_postgres
    image: registry.hub.docker.com/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    networks:
      - traefik-network
    restart: always

networks:
  traefik-network:
    external: true
